@using Sitecore.Feature.Navigation
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@model Sitecore.Feature.Navigation.Models.NavigationItems

<ul class="nav navbar-nav">
    @if (Model?.Items != null)
    {
        var currentUrl = Sitecore.Links.LinkManager.GetItemUrl(Sitecore.Context.Item);
        foreach (var item in Model.Items)
        {
            var hasChildren = item.Children != null && item.Children.Items.Any() && item.ShowChildren;
            var cssClass = "";
            if (hasChildren)
            {
                cssClass += " dropdown";
            }

        <li class="@cssClass @(currentUrl.ToString().Equals(item.Url,StringComparison.OrdinalIgnoreCase) ? "active" : "")">
            @if (hasChildren)
                    {
                    <a href="@item.Url" class="dropdown-toggle text-uppercase" data-toggle="dropdown" role="button" aria-haspopup="true" aria-expanded="false">
                        @Html.Sitecore().Field(Templates.Navigable.Fields.NavigationTitle, item.Item)<span class="caret"></span>
                    </a>
                    <ul class="dropdown-menu">
                        @foreach (var subitem in item.Children.Items)
                            {
                            <li class="@(subitem.IsActive ? "active" : "")">
                                <a href="@subitem.Url" target="@subitem.Target">@Html.Sitecore().Field(Templates.Navigable.Fields.NavigationTitle, subitem.Item)</a>
                            </li>
                            }
                    </ul>
                    }
                    else
                    {
                    <a class="text-uppercase" href="@item.Url" target="@item.Target">
                        @Html.Sitecore().Field(Templates.Navigable.Fields.NavigationTitle, item.Item)
                    </a>
                    }
        </li>
            }
        }
</ul>
