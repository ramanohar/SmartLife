@using Sitecore.Feature.PageContent
@using Sitecore.Foundation.SitecoreExtensions.Extensions
@using Sitecore.Foundation.Alerts
@using Sitecore.Foundation.Alerts.Extensions
@using Sitecore.Foundation.Dictionary.Extensions
@using Sitecore.Foundation.SitecoreExtensions.Repositories
@model Sitecore.Mvc.Presentation.RenderingModel
@{
    const int DefaultColumns = 4;

    var children = Model.Item.Children.Where(i => i.IsDerived(Templates.HasPageContent.ID) && i.HasContextLanguage()).ToArray();
    var numColumns = children.Length >= DefaultColumns ? DefaultColumns : (children.Length <= 2 ? 2 : children.Length);
}
<div class="row">
    @foreach (var item in children)
            {
        <div class="col-xs-12 col-sm-@numColumns col-md-@(numColumns-1)">
            <div class="recent-work-wrap">
                @Html.Sitecore().ImageField(Templates.HasPageContent.Fields.Image, item, mw: 500, cssClass: "img-responsive")
                <div class="overlay">
                    <div class="recent-work-inner">
                        <h3><a href="#">@Html.Sitecore().Field(Templates.HasPageContent.Fields.Title, item)</a> </h3>
                        @Html.Sitecore().Field(Templates.HasPageContent.Fields.Summary, item)
                        <a class="preview" href="@item.Url()"><i class="fa fa-eye"></i> @Html.Sitecore().Dictionary("/PageContent/Teaser/Read more", "Read more")</a>
                    </div>
                </div>
            </div>
        </div>
    }
</div>